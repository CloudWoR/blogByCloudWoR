(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{339:function(t,s,a){"use strict";a.r(s);var e=a(3),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("文章说明")]),t._v(" "),a("p",[t._v("只针对git的使用（常用命令、使用技巧等）、云端代码托管、本地代码托管进行阐述。")])]),t._v(" "),a("h2",{attrs:{id:"版本控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本控制"}},[t._v("#")]),t._v(" 版本控制")]),t._v(" "),a("p",[t._v("版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。"),a("br"),t._v("\n采用版本控制，可以将某个文件回溯到之前的状态，甚至将整个项目都回退到过去某个时间点的状态。即使真个项目被修改，也可以轻松恢复到原先的样子。")]),t._v(" "),a("h2",{attrs:{id:"分布式版本控制系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式版本控制系统"}},[t._v("#")]),t._v(" 分布式版本控制系统")]),t._v(" "),a("p",[t._v("每个客户端并不只是提取最新版本的文件快照，而是把代码仓库完整地clone下来。这么一来，任何一处协同工作用的服务器发生故障，都可以从任何一个clone下来的本地仓库恢复。")]),t._v(" "),a("h2",{attrs:{id:"git提供的特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git提供的特性"}},[t._v("#")]),t._v(" git提供的特性")]),t._v(" "),a("ul",[a("li",[t._v("分支切换速度快")]),t._v(" "),a("li",[t._v("容量小（压缩优化）")]),t._v(" "),a("li",[t._v("简单的设计")]),t._v(" "),a("li",[t._v("完全的分布式")]),t._v(" "),a("li",[t._v("对非线性开发模式的强力支持（允许上千个并行开发的分支）")]),t._v(" "),a("li",[t._v("有能力高效管理类似Linux内核一样的超大规模项目（速度和数据量）")])]),t._v(" "),a("h2",{attrs:{id:"git初始化设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git初始化设置"}},[t._v("#")]),t._v(" git初始化设置")]),t._v(" "),a("p",[t._v("一般在新的系统上，首先需要配置自己的git工作环境。配置工作只需要一次，以后升级时还会沿用现在的配置。如果有需要，随时可以用相同的命令修改已有的配置。")]),t._v(" "),a("h3",{attrs:{id:"git-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-config"}},[t._v("#")]),t._v(" git config")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("git config")]),t._v(" "),a("p",[t._v("git提供了一个叫做git config的命令来配置或读取相应的工作环境变量。而正是由这些环境变量，决定了git在各个环节的具体工作方式和行为。")])]),t._v(" "),a("h4",{attrs:{id:"git-config的三个级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-config的三个级别"}},[t._v("#")]),t._v(" git config的三个级别")]),t._v(" "),a("ul",[a("li",[t._v("/etc/git config --system 系统级别。对所有用户都适用的配置")]),t._v(" "),a("li",[t._v("~/git config --global 用户目录下的配置文件，只属于该用户。")]),t._v(" "),a("li",[t._v(".git config none(空) 空代表当前项目的配置，仅对当前项目有效。")])]),t._v(" "),a("h3",{attrs:{id:"初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name userName\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.emal xxx@xx.com\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("优先级")]),t._v(" "),a("p",[t._v("项目级别 > 用户级别 > 系统级别")])]),t._v(" "),a("h2",{attrs:{id:"git命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git命令"}},[t._v("#")]),t._v(" git命令")]),t._v(" "),a("h3",{attrs:{id:"底层命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#底层命令"}},[t._v("#")]),t._v(" 底层命令")]),t._v(" "),a("h4",{attrs:{id:"git文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git文件夹"}},[t._v("#")]),t._v(" .git文件夹")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("根目录文件或文件夹")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("hooks")]),t._v(" "),a("td",[t._v("目录包含客户端或服务端钩子函数")])]),t._v(" "),a("tr",[a("td",[t._v("info")]),t._v(" "),a("td",[t._v("包含一个全局性排除文件（不需要管理的文件）")])]),t._v(" "),a("tr",[a("td",[t._v("logs")]),t._v(" "),a("td",[t._v("保存日志信息")])]),t._v(" "),a("tr",[a("td",[t._v("objects")]),t._v(" "),a("td",[t._v("目录存储所有数据内容")])]),t._v(" "),a("tr",[a("td",[t._v("refs")]),t._v(" "),a("td",[t._v("目录存储指向数据的提交对象的指针(分支)")])]),t._v(" "),a("tr",[a("td",[t._v("config")]),t._v(" "),a("td",[t._v("文件包含项目特有的配置选项")])]),t._v(" "),a("tr",[a("td",[t._v("description")]),t._v(" "),a("td",[t._v("用来显示对仓库的描述信息")])]),t._v(" "),a("tr",[a("td",[t._v("HEAD")]),t._v(" "),a("td",[t._v("文件指示目前被检出的分支")])]),t._v(" "),a("tr",[a("td",[t._v("index")]),t._v(" "),a("td",[t._v("文件保存暂存区信息")])])])]),t._v(" "),a("h4",{attrs:{id:"基础的linux命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础的linux命令"}},[t._v("#")]),t._v(" 基础的Linux命令")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("命令commend")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("clear")]),t._v(" "),a("td",[t._v("清除屏幕")])]),t._v(" "),a("tr",[a("td",[t._v("echo 'test content' > test.txt")]),t._v(" "),a("td",[t._v("创建文件")])]),t._v(" "),a("tr",[a("td",[t._v("echo 'test content'")]),t._v(" "),a("td",[t._v("向控制台输出信息")])]),t._v(" "),a("tr",[a("td",[t._v("ll")]),t._v(" "),a("td",[t._v("将当前目录下的子文件以及子目录平铺在控制台")])]),t._v(" "),a("tr",[a("td",[t._v("find 目录名")]),t._v(" "),a("td",[t._v("将对应目录下的子文件、子孙文件平铺在控制台")])]),t._v(" "),a("tr",[a("td",[t._v("find 目录名 -type f")]),t._v(" "),a("td",[t._v("将对应目录下的子文件、子孙文件的指定类型文件平铺在控制台")])]),t._v(" "),a("tr",[a("td",[t._v("rm 文件名")]),t._v(" "),a("td",[t._v("删除指定文件")])]),t._v(" "),a("tr",[a("td",[t._v("mv 源文件 重命名文件")]),t._v(" "),a("td",[t._v("指定文件重命名")])]),t._v(" "),a("tr",[a("td",[t._v("cut 文件的url")]),t._v(" "),a("td",[t._v("查看对应文件的内容")])]),t._v(" "),a("tr",[a("td",[t._v("vim 文件的url")]),t._v(" "),a("td",[t._v("进入vim编辑器")])])])]),t._v(" "),a("h5",{attrs:{id:"vim编辑器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim编辑器"}},[t._v("#")]),t._v(" vim编辑器")]),t._v(" "),a("ul",[a("li",[t._v("vim 文件的url\n"),a("ul",[a("li",[t._v("i 进入插入模式，进行文件的编辑")]),t._v(" "),a("li",[t._v("esc + : 进行命令执行\n"),a("ul",[a("li",[t._v("q! 强制退出（不保存）")]),t._v(" "),a("li",[t._v("wq 保存后退出")]),t._v(" "),a("li",[t._v("set nu 设置行号")])])])])])]),t._v(" "),a("h4",{attrs:{id:"初始化新的git仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化新的git仓库"}},[t._v("#")]),t._v(" 初始化新的git仓库")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"git对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git对象"}},[t._v("#")]),t._v(" git对象")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("git对象定义")]),t._v(" "),a("p",[t._v("git的核心部分是一个简单的键值对数据库。我们可以向该数据库插入任意类型的内容，它会返回一个键值，通过该键值可以在任意时刻再次检索该内容。"),a("br"),t._v("\ngit对象是一个：key-value 组成的键值对(key是value对应的hash)"),a("br"),t._v("\n键值对在git内部是一个blob类型数据")])]),t._v(" "),a("h5",{attrs:{id:"向数据库写入内容，并返回对应键值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向数据库写入内容，并返回对应键值"}},[t._v("#")]),t._v(" 向数据库写入内容，并返回对应键值")]),t._v(" "),a("p",[t._v("命令：")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test content'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" hash-object-w --stdin\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("-w 选项指示 hash-object 命令存储数据对象。若不指定此选项，则该命令仅返回对应的键值。")]),t._v(" "),a("li",[t._v("-stdin（standard input） 选项指示该命令从标准输入读取内容。若不指定此选项，则须在命令尾部给出待存储文件的路径。\n"),a("ul",[a("li",[t._v("产生一个根据内容来确定的hash值")]),t._v(" "),a("li",[t._v("利用 git cat-file -p hash值 来读取该内容")])])])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test.txt v1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" test.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" $ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" hash-object -w ./test.txt\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("对文件进行管理")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -p hash值 // 查看哈希值对应的值\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("问题")]),t._v(" "),a("p",[t._v("1、记住文件的每一个版本所对应的hash值并不现实"),a("br"),t._v("\n2、在git中，文件名并没有被保存，仅保存了文件的内容"),a("br"),t._v("\n以上的操作都是在对本地数据库进行操作，并不涉及暂存区"),a("br"),t._v("\n所以，引出了“树对象”的概念。")])]),t._v(" "),a("h4",{attrs:{id:"树对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#树对象"}},[t._v("#")]),t._v(" 树对象")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("树对象定义")]),t._v(" "),a("p",[t._v("树对象（tree object），它能解决文件名保存问题，也允许我们将多个文件组织到一起。git以一种类似于UNIX文件系统的方式存储内容。所有内容均以“树对象”和“数据对象”（git对象）的形式存储，其中："),a("br"),t._v("\n树对象：对应了UNIX中的目录项"),a("br"),t._v("\n数据对象（git对象）：大致对应了数据内容。")])]),t._v(" "),a("h5",{attrs:{id:"构建树对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建树对象"}},[t._v("#")]),t._v(" 构建树对象")]),t._v(" "),a("p",[t._v("操作：")]),t._v(" "),a("ol",[a("li",[t._v("利用update-index命令，为test.txt文件的首个版本创建一个暂存区，并通过write-tree命令生成树对象。")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --add --cacheinfo "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --add 因为此前该文件并不存在暂存区中 首次需要 --add来放入暂存区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --cacheinfo 因为将要添加的文件位于git数据库中，而不是位于当前目录下，所以要 --cacheinfo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 100644 普通文件类型")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("查看暂存区")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ls-files -s\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("p",[t._v("将暂存区建立一个快照")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" write-tree\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("git对象与树对象")]),t._v(" "),a("p",[t._v("git对象： 代表文件的一次次快照"),a("br"),t._v("\n树对象： 代表项目的一次次快照")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("新增new.txt文件，将new.txt和test.txt文件的第二个版本塞入暂存区。并通过write-tree命令，生成树对象。"),a("br"),t._v("\n命令：")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new.txt v1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" new.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" hash-object -w new.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --cacheinfo "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" hash值 test.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --add new.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" write-tree\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("将第一个树对象加入第二个树对象")])]),t._v(" "),a("h4",{attrs:{id:"提交对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交对象"}},[t._v("#")]),t._v(" 提交对象")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提交对象含义")]),t._v(" "),a("p",[t._v("我们可以通过调用commit-tree命令创建一个提交对象，为此需要指定一个对象的SHA-1(哈希)值，以及该提交的父提交对象（第一次将暂存区做快照时没有父对象）")])]),t._v(" "),a("ul",[a("li",[t._v("创建提交对象")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'first commit'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit-tree d8329f\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("查看提交对象")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -p fdf4fc3\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"git高层命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git高层命令"}},[t._v("#")]),t._v(" git高层命令")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("命令")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("git init")]),t._v(" "),a("td",[t._v("初始化仓库")])]),t._v(" "),a("tr",[a("td",[t._v("git add")]),t._v(" "),a("td",[t._v("生成git对象，将git对象保存在暂存区")])]),t._v(" "),a("tr",[a("td",[t._v("git commit -m '注释'")]),t._v(" "),a("td",[t._v("生成树对象，将树对象保存到版本区，同时添加提交信息并记录父提交对象")])]),t._v(" "),a("tr",[a("td",[t._v("git commit -a -m '注释'")]),t._v(" "),a("td",[t._v("跳过暂存区，直接提交")])]),t._v(" "),a("tr",[a("td",[t._v("git status")]),t._v(" "),a("td",[t._v("检查文件当前处于什么状态")])]),t._v(" "),a("tr",[a("td",[t._v("git diff")]),t._v(" "),a("td",[t._v("当前以跟踪的文件还有哪些未做暂存操作")])]),t._v(" "),a("tr",[a("td",[t._v("git diff --cached 或 git diff --staged")]),t._v(" "),a("td",[t._v("有哪些更新已经暂存起来准备好了下次提交")])]),t._v(" "),a("tr",[a("td",[t._v("git log")]),t._v(" "),a("td",[t._v("查看日志")])]),t._v(" "),a("tr",[a("td",[t._v("git log --pretty=oneline")]),t._v(" "),a("td",[t._v("简化信息，以单行显示版本修改日志，完整显示hash值")])]),t._v(" "),a("tr",[a("td",[t._v("git log --oneline")]),t._v(" "),a("td",[t._v("简化信息，部分显示hash值")])]),t._v(" "),a("tr",[a("td",[t._v("git log --oneline --decorate --graph --all")]),t._v(" "),a("td",[t._v("显示完整的分支信息")])]),t._v(" "),a("tr",[a("td",[t._v("git reflog")]),t._v(" "),a("td",[t._v("只要HEAD有变化，那么git reflog就会记录下来")])]),t._v(" "),a("tr",[a("td",[t._v('git config --global alias.别名 "log --oneline --decorate --graph --all"')]),t._v(" "),a("td",[t._v("配置某个命令的别名")])]),t._v(" "),a("tr",[a("td",[t._v("git rm 文件名")]),t._v(" "),a("td",[t._v("删除工作目录的文件，并将修改添加到暂存区")])]),t._v(" "),a("tr",[a("td",[t._v("git mv 源文件 新文件")]),t._v(" "),a("td",[t._v("将工作目录中的文件进行重命名，再将修改添加到暂存区")])]),t._v(" "),a("tr",[a("td",[t._v("git branch 分支名")]),t._v(" "),a("td",[t._v("创建一个分支，实际上为你创建了一个可移动的新指针")])]),t._v(" "),a("tr",[a("td",[t._v("git branch -d 分支名")]),t._v(" "),a("td",[t._v("删除一个已合并的分支")])]),t._v(" "),a("tr",[a("td",[t._v("git branch -D 分支名")]),t._v(" "),a("td",[t._v("强制删除一个未合并的分支")])]),t._v(" "),a("tr",[a("td",[t._v("git branch -v")]),t._v(" "),a("td",[t._v("显示每一个分支的最后一次提交")])]),t._v(" "),a("tr",[a("td",[t._v("git branch 分支名 commitHsh")]),t._v(" "),a("td",[t._v("新建一个分支并且使分支指向对应的提交对象")])]),t._v(" "),a("tr",[a("td",[t._v("git checkout 分支名")]),t._v(" "),a("td",[t._v("切换分支")])]),t._v(" "),a("tr",[a("td",[t._v("git checkout -b 分支名")]),t._v(" "),a("td",[t._v("新建分支并切换")])]),t._v(" "),a("tr",[a("td",[t._v("git checkout -- filename")]),t._v(" "),a("td",[t._v("撤回工作区")])]),t._v(" "),a("tr",[a("td",[t._v("git branch")]),t._v(" "),a("td",[t._v("显示分支列表，带*表示为当前选中分支")])]),t._v(" "),a("tr",[a("td",[t._v("git merge 分支名")]),t._v(" "),a("td",[t._v("将目标分支合并到当前分支")])]),t._v(" "),a("tr",[a("td",[t._v("git stash")]),t._v(" "),a("td",[t._v("保存已修改的工作区，同时将修改之前的状态提交")])]),t._v(" "),a("tr",[a("td",[t._v("git stash list")]),t._v(" "),a("td",[t._v("查看已保存在栈内的元素")])]),t._v(" "),a("tr",[a("td",[t._v("git stash apply stash@{栈编号}")]),t._v(" "),a("td",[t._v("应用已保存的栈内元素，不对栈进行清除")])]),t._v(" "),a("tr",[a("td",[t._v("git stash drop stash{编号}")]),t._v(" "),a("td",[t._v("通过存储名来删除栈")])]),t._v(" "),a("tr",[a("td",[t._v("git stash pop")]),t._v(" "),a("td",[t._v("应用栈内元素，然后删除")])]),t._v(" "),a("tr",[a("td",[t._v("git reset --soft HEAD~")]),t._v(" "),a("td",[t._v("将HEAD指针回退一步")])]),t._v(" "),a("tr",[a("td",[t._v("git commit --amend")]),t._v(" "),a("td",[t._v("将HEAD指针回退一步，同时可以修改注释")])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("已跟踪的文件在git stauts中的三种状态")]),t._v(" "),a("ol",[a("li",[t._v("已修改，对已跟踪的文件做的任何修改，其修改状态都将被记录，但是没有进入暂存区")]),t._v(" "),a("li",[t._v("已暂存，执行git add后，文件将进入暂存区，同时产生git对象")]),t._v(" "),a("li",[t._v("已提交，执行git commit后，暂存区的文件将被提交，产生树对象，并将树对象封装成一次版本记录，指向其父版本")])])]),t._v(" "),a("h4",{attrs:{id:"文件的删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件的删除"}},[t._v("#")]),t._v(" 文件的删除")]),t._v(" "),a("p",[t._v("工作区文件的删除，也将在git对象中产生一个增量对象，记录此此行为。\n通过“git rm”删除")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" 文件名\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一步执行了：rm 文件名，git add 文件名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 直接将删除对象放入暂存区等待提交")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h4",{attrs:{id:"文件的重命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件的重命名"}},[t._v("#")]),t._v(" 文件的重命名")]),t._v(" "),a("p",[t._v("工作区文件的重命名，首先将进行一次删除的增量对象，然后进行新建一个文件的增量对象。\n通过“git mv” 重命名")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" 源文件 新文件名\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 异步执行了：mv 源文件 新文件，git add 文件名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 直接将重命名的修改对象放入暂存区等待提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 必须经过提交的文件才可以通过git mv来重命名。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"查看历史记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看历史记录"}},[t._v("#")]),t._v(" 查看历史记录")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --oneline\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"git分支操作（git特色功能）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git分支操作（git特色功能）"}},[t._v("#")]),t._v(" git分支操作（git特色功能）")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("git特色")]),t._v(" "),a("p",[t._v("几乎所有的版本控制系统都以某种形式支持分支，使用分支意味着可以把我们的工作从开发主线上分离出来，以免影响正常开发主线。在很多版本控制系统中，这是一个略低效的过程——常常需要完全创建一个源代码目录的副本。对于大项目来说，这样的过程会消耗很多时间。"),a("br"),t._v("\n而git的特色就在于，git的分支模型及其的高效且轻量。也正因为这一特性，使得git从众多版本控制系统中脱颖而出。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("分支")]),t._v(" "),a("p",[t._v("指向最新提交对象的指针")])]),t._v(" "),a("h3",{attrs:{id:"创建分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[t._v("#")]),t._v(" 创建分支")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch 分支名\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("不会自动切换到新分支")]),t._v(" "),a("p",[t._v("git branch 分支名 创建的新分支会在当前提交对象上创建一个指针")])]),t._v(" "),a("h3",{attrs:{id:"切换分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[t._v("#")]),t._v(" 切换分支")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout 分支名\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("切换分支注意事项")]),t._v(" "),a("p",[t._v("分支切换会改变你工作目录中的文件，在切换分支时，一定要注意你工作目录里的文件会被改变！如果时切换到一个较旧的分支，你的工作目录就会恢复到该分支最后一次提交的样子。如果git不能干净利落的完成这个任务，那么它将禁止切换分支。")])]),t._v(" "),a("h4",{attrs:{id:"切换分支修改了三个地方"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换分支修改了三个地方"}},[t._v("#")]),t._v(" 切换分支修改了三个地方")]),t._v(" "),a("ul",[a("li",[t._v("HEAD")]),t._v(" "),a("li",[t._v("暂存区")]),t._v(" "),a("li",[t._v("工作目录")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("切换分支最佳实践")]),t._v(" "),a("p",[t._v("每次切换分支之前，当前的分支一点过要是干净的（全部已提交）。"),a("br"),t._v("\n在切换分支时，如果当前分支上面有未暂存的修改（第一次），或有未提交的暂存（第一次），此时分支可以切换成功，但是这种操作可能会污染其他分支。"),a("br"),t._v("\n一旦提交后，在当前分支对已提交的文件进行修改后，如果未提交，git将不允许切换分支。")])]),t._v(" "),a("h3",{attrs:{id:"删除分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d 分支名\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不可以在当前分支上删除当前的分支")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"查看分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看分支"}},[t._v("#")]),t._v(" 查看分支")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"查看每一个分支的最后一次提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看每一个分支的最后一次提交"}},[t._v("#")]),t._v(" 查看每一个分支的最后一次提交")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -v\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"查看完整的分支列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看完整的分支列表"}},[t._v("#")]),t._v(" 查看完整的分支列表")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --oneline --decorate --graph --all\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"配置别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置别名"}},[t._v("#")]),t._v(" 配置别名")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("对长命令进行别名配置")]),t._v(" "),a("p",[t._v("git允许在config的alias下配置一系列别名来简化命令的输入")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global alias.别名 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log --oneline --decorate --graph --all"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"合并分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),a("h4",{attrs:{id:"快进合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快进合并"}},[t._v("#")]),t._v(" 快进合并")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge 分支名\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"git分支实际使用案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git分支实际使用案例"}},[t._v("#")]),t._v(" git分支实际使用案例")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("工作流")]),t._v(" "),a("ol",[a("li",[t._v("开发某个网站")]),t._v(" "),a("li",[t._v("为实现某个新的需求，创建一个分支。")]),t._v(" "),a("li",[t._v("在这个分支上开展工作"),a("br"),t._v("\n正在此时，突然遇到一个严重的问题需要紧急修补。你将按照如下方式来处理：\n"),a("ol",[a("li",[t._v("切换到你的线上分支（production branch）。")]),t._v(" "),a("li",[t._v("为这个紧急任务新建一个分支，并在其中修复它。")]),t._v(" "),a("li",[t._v("在测试通过之后，切换回线上分支，然后合并这个修补分支，最后将改动推送到线上分支。")]),t._v(" "),a("li",[t._v("切换回你最初工作的分支上，继续工作。")])])])])]),t._v(" "),a("h3",{attrs:{id:"分支模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支模式"}},[t._v("#")]),t._v(" 分支模式")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("长期分支")]),t._v(" "),a("p",[t._v("只在master分支上保留完全稳定的代码——有可能仅仅时已经发布或即将发布的代码。它们还有一些名为develop或者next的平行分支，被用来做后续开发或者测试稳定性。"),a("br"),t._v("\n这些分支不必保持绝对稳定，但是一旦达到稳定状态，它们就可以被合并入master分支，等待下一次发布。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("分支的本质")]),t._v(" "),a("p",[t._v("git的分支，其本质上仅仅是指向提交对象的可变指针（HEAD）。")])]),t._v(" "),a("h3",{attrs:{id:"分支原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支原理"}},[t._v("#")]),t._v(" 分支原理")]),t._v(" "),a("ul",[a("li",[t._v(".git/refs目录\n"),a("ul",[a("li",[t._v("这个目录中保存了分支及其对应的提交对象")])])]),t._v(" "),a("li",[t._v("HEAD引用\n"),a("ul",[a("li",[t._v("当运行类似 git branch 分支名 这样的命令时，git会取得当前所在分支最新提交对应的hash值，并将其加入你要创建的任何分支中")]),t._v(" "),a("li",[t._v("HEAD文件是一个符号引用（symbolic reference），指向目前所在的分支。所谓符号引用，意味着它并不像普通引用那样包含一个hash值。它是一个指向其他引用的指针。")])])])]),t._v(" "),a("h3",{attrs:{id:"git存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git存储"}},[t._v("#")]),t._v(" git存储")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("git stach 命令")]),t._v(" "),a("p",[t._v("有时，当你在项目的一部分上已经工作一段时间后，所有东西都进入的混乱的状态，而这时你想要切换到另一个分支做一点别的事情。问题是，你不想仅仅因为此次未完成的工作做一次commit。针对这个问题，就出现了git stach命令")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存当前的工作区，同时将本次修改前的状态提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前已保存的栈")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply stash@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("编号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用一个指定的存储，如果不指定，git认为指定最近的一次存储")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用存储然后立即从栈上移除")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过存储名来移除")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h2",{attrs:{id:"项目回退（后悔药）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目回退（后悔药）"}},[t._v("#")]),t._v(" 项目回退（后悔药）")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("项目回退的三个级别")]),t._v(" "),a("ul",[a("li",[t._v("工作区")]),t._v(" "),a("li",[t._v("暂存区")]),t._v(" "),a("li",[t._v("版本库")])])]),t._v(" "),a("h3",{attrs:{id:"工作区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作区"}},[t._v("#")]),t._v(" 工作区")]),t._v(" "),a("h4",{attrs:{id:"撤回工作目录中的修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤回工作目录中的修改"}},[t._v("#")]),t._v(" 撤回工作目录中的修改")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -- filename\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"暂存区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暂存区"}},[t._v("#")]),t._v(" 暂存区")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("提交不清空暂存区")]),t._v(" "),a("p",[t._v("commit提交以后，不会清空暂存区，使用git ls-files -s仍热能查询到暂存区的内容")])]),t._v(" "),a("h4",{attrs:{id:"撤回暂存区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤回暂存区"}},[t._v("#")]),t._v(" 撤回暂存区")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore --staged filename\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore filename\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD filename\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"版本库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本库"}},[t._v("#")]),t._v(" 版本库")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("无法撤回版本库")]),t._v(" "),a("p",[t._v("无法对版本库进行撤回，只能对注释进行修改。")])]),t._v(" "),a("h4",{attrs:{id:"撤回版本库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤回版本库"}},[t._v("#")]),t._v(" 撤回版本库")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重新给用户一次机会来修改注释")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"重置（reset-restore）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重置（reset-restore）"}},[t._v("#")]),t._v(" 重置（reset | restore）")]),t._v(" "),a("h4",{attrs:{id:"reset三步曲"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset三步曲"}},[t._v("#")]),t._v(" reset三步曲")]),t._v(" "),a("ol",[a("li",[t._v("--soft")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("reset首先进行HEAD指向的移动")]),t._v(" "),a("p",[t._v("git reset --soft HEAD~\n本质上是撤销了一次git commit命令。")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向后移动")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --soft HEAD~\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当运行git commit时，git会创建一个新的提交，并移动HEAD所指向的分支来使其指向该提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于 git commit --amend")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不会修改暂存区和工作区,只修改HEAD的指向，带着分支一起移动")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向前移动")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --soft HEAD\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或 git reset --soft hash")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("--mixed")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --mixed HEAD\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改HEAD（带着分支一起移动）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同时修改暂存区")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("--hard")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改HEAD（带着分支一起移动）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同时修改暂存区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同时将工作目录一起改变")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("--hard是reset命令唯一危险的方法")]),t._v(" "),a("p",[t._v("会将还未保存的工作目录进行修改，之后无法在被找回。")])]),t._v(" "),a("h3",{attrs:{id:"checkout与git-reset-hard-commithash的对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checkout与git-reset-hard-commithash的对比"}},[t._v("#")]),t._v(" checkout与git reset --hard commithash的对比")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("checkout commithash")]),t._v(" "),a("th",[t._v("reset --hard commithash")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("只动HEAD")]),t._v(" "),a("td",[t._v("带着分支一起移动")])]),t._v(" "),a("tr",[a("td",[t._v("对工作区安全")]),t._v(" "),a("td",[t._v("会强制覆盖工作区")])])])]),t._v(" "),a("h3",{attrs:{id:"路径reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径reset"}},[t._v("#")]),t._v(" 路径reset")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--mixed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" HEAD filename "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reset 将会跳过第一步")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset filename\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤回暂存区")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);